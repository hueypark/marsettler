// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_MSGLOGINRES_FBS_H_
#define FLATBUFFERS_GENERATED_MSGLOGINRES_FBS_H_

#include "flatbuffers/flatbuffers.h"

#include "MsgActor_generated.h"
#include "MsgVector_generated.h"

namespace fbs {

struct MsgLoginRes;
struct MsgLoginResBuilder;

struct MsgLoginRes FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef MsgLoginResBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_ACTOR = 4
  };
  const fbs::MsgActor *Actor() const {
    return GetPointer<const fbs::MsgActor *>(VT_ACTOR);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_ACTOR) &&
           verifier.VerifyTable(Actor()) &&
           verifier.EndTable();
  }
};

struct MsgLoginResBuilder {
  typedef MsgLoginRes Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_Actor(flatbuffers::Offset<fbs::MsgActor> Actor) {
    fbb_.AddOffset(MsgLoginRes::VT_ACTOR, Actor);
  }
  explicit MsgLoginResBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  MsgLoginResBuilder &operator=(const MsgLoginResBuilder &);
  flatbuffers::Offset<MsgLoginRes> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<MsgLoginRes>(end);
    return o;
  }
};

inline flatbuffers::Offset<MsgLoginRes> CreateMsgLoginRes(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<fbs::MsgActor> Actor = 0) {
  MsgLoginResBuilder builder_(_fbb);
  builder_.add_Actor(Actor);
  return builder_.Finish();
}

inline const fbs::MsgLoginRes *GetMsgLoginRes(const void *buf) {
  return flatbuffers::GetRoot<fbs::MsgLoginRes>(buf);
}

inline const fbs::MsgLoginRes *GetSizePrefixedMsgLoginRes(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<fbs::MsgLoginRes>(buf);
}

inline bool VerifyMsgLoginResBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<fbs::MsgLoginRes>(nullptr);
}

inline bool VerifySizePrefixedMsgLoginResBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<fbs::MsgLoginRes>(nullptr);
}

inline void FinishMsgLoginResBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fbs::MsgLoginRes> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedMsgLoginResBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fbs::MsgLoginRes> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace fbs

#endif  // FLATBUFFERS_GENERATED_MSGLOGINRES_FBS_H_
