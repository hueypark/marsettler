// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_MOVERES_FBS_H_
#define FLATBUFFERS_GENERATED_MOVERES_FBS_H_

#include "flatbuffers/flatbuffers.h"

namespace fbs {

struct MoveRes;
struct MoveResBuilder;

struct MoveRes FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef MoveResBuilder Builder;
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct MoveResBuilder {
  typedef MoveRes Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit MoveResBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  MoveResBuilder &operator=(const MoveResBuilder &);
  flatbuffers::Offset<MoveRes> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<MoveRes>(end);
    return o;
  }
};

inline flatbuffers::Offset<MoveRes> CreateMoveRes(
    flatbuffers::FlatBufferBuilder &_fbb) {
  MoveResBuilder builder_(_fbb);
  return builder_.Finish();
}

inline const fbs::MoveRes *GetMoveRes(const void *buf) {
  return flatbuffers::GetRoot<fbs::MoveRes>(buf);
}

inline const fbs::MoveRes *GetSizePrefixedMoveRes(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<fbs::MoveRes>(buf);
}

inline bool VerifyMoveResBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<fbs::MoveRes>(nullptr);
}

inline bool VerifySizePrefixedMoveResBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<fbs::MoveRes>(nullptr);
}

inline void FinishMoveResBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fbs::MoveRes> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedMoveResBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fbs::MoveRes> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace fbs

#endif  // FLATBUFFERS_GENERATED_MOVERES_FBS_H_
